[ 입출력 ] : 입력(컴퓨터 안으로)과 출력(컴퓨터 밖으로)
[ 파일 ] : 컴퓨터에 쓰이는 데이터들을 모아놓은 것
[ 스트림 ] : 컴퓨터 내 데이터/자료가 다니는 통로
    - 데이터가 다니는 통로인 스트림은 바이트 단위로 이동
    - 자바(JVM:자바 가상 메모리) <-스트림(데이터/바이트)-> 윈도우(C:)
    // JVM(휘발성/프로그램 종료 시 초기화)
    // 파일(비휘발성/자바 외부에 저장했으므로 영구저장)
    - 영문/특수문자(1바이트) , 한글(2바이트)

[ 바이트 ] : 컴퓨터가 처리하는 용량의 단위
        1. 비트 : 0 또는 1
        2. 바이트 : 0 1 0 1 0 1 0 1
        3. (1024B)= 1KB -> (1024KB)= 1MB -> (1024MB)= 1GB
        주로 영문(아스키코드)은 1바이트, 한글(유니코드-java)은 2바이트

[ 파일 입출력 ] : 파일에 데이터를 입력하고 출력하는 작업
    - 파일 입출력과 관련된 클래스 / 인터페이스
    - 사용 이유 : 자바에서 다루는 데이터를 영구저장하기 위해서 자바 외부에 저장하는 기술

    1. (C)FileOutputStream 객채변수명 = new FileOutputStream(파일 경로) , 일반 예외(예외 필수)
        1. .write(출력할 바이트 배열); - 현재 연동된 파일에 쓰기(출력)하는 함수

    2. (C)FileInputStream 객체변수명 = new FileInputStream(파일 경로) , 일반 예외
        1. .read(바이트배열); - 현재 연동된 파일에 바이트 단위로 데이터를 읽어오는 함수

[ 파일 관련 클래스 ]
    - File 클래스 메서드
        1. .isFile() : 지정한 경로의 파일이 존재하는지 반환 함수
        2. .getName() : 지정한 파일의 이름 반환 함수
        3. .length() : 지정한 파일의 용량(바이트) 반환 ㅎ마수

[ 경로 ]

    1. 절대 경로 : 지정한 파일이 위치한 경로를 모두 작성한 경우
    D:\KMH_D\test.txt

    2. 상대 경로 : 지정한 파일이 위치한 경로를 현재 위치 기준으로 작성된 경우
    ./ : 현재 위치를 뜻함
    ../ : 상위 위치를 뜻함
    (현재 클래스) ./src/day05/test1.txt

[ 기타 참고 함수 ]
    "문자열".getBytes() : 문자열을 바이트 배열로 반환 해주는 함수
    1. new String(바이트배열) : 바이트 배열을 문자열로 반환 해주는 객체 생성자

- 객체를 사용하는 이유 : 메서드(멤버함수)를 사용하기 위해서
- 객체없이 메서드를 사용할 수 있는가? static 메서드이면 가능
- 메서드 사용하는 이유 : 자바회사가 미리 제공하는 코드들의 집합(라이브러리) 중 일종인 메서드를
     사용하면 빠른 개발이 가능하다.

[ 예외 ] : 개발자 또는 사용자의 부주의로 프로그램이 종료되는 상황
    - 종류 : 1. 일반 예외 2. 실행 예외
        1. 일반 예외(컴파일/코드 번역 과정에서 코드를 검사하는 예외)
            - 대부분/주로 입출력 , 시스템 , 외부 , 네트워크 등등
        2. 실행 예외(컴파일/코드 번역 과정에서 코드를 검사하지 않는 예외)
            - 대부분/주로 nullPointerException 등등